/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package transversal_vista;

import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import transversal_accesoDeDatos.AlumnoData;
import transversal_accesoDeDatos.InscripcionData;
import transversal_accesoDeDatos.MateriaData;
import transversal_entidades.Alumno;
import transversal_entidades.Inscripcion;
import transversal_entidades.Materia;

 
public class FormularioActualizacionDeNotas extends javax.swing.JInternalFrame {

    /**
     * Creates new form ActualizacionDeNotas
     */
    
    
    private List<Alumno> listaAlumno;
  //  private List<Materia> listaMaterias;
    private List <Inscripcion> listaInscripcion;
            
    private DefaultTableModel modeloTabla;
    
    private InscripcionData inscripData;
    private MateriaData matData;
    private AlumnoData aluData; 
    
   
    
      
    public FormularioActualizacionDeNotas() {
        initComponents();
       
        aluData = new AlumnoData();
      
        //se restringe la edicion de la cabecera anio y nombre(col 0 y ). solo editable Nota col=2
        modeloTabla = new DefaultTableModel() {
            public boolean  isCellEditable (int fil, int col) {
                if (col==2) {
                    return true;
                }
                return false; 
            }
        };
        inscripData = new InscripcionData();
        matData = new MateriaData();
        
        //agregacion a la lista de los alumnos
        cargarAlumnos();
        armarCabeceraTabla();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox1 = new javax.swing.JComboBox<>();
        jButton_guardar = new javax.swing.JButton();
        jButton_salir = new javax.swing.JButton();
        jLabel_NotaTItulo = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jcomboBoxAlumno = new javax.swing.JComboBox<>();
        jLabel1_alumno = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1_listadoMateria = new javax.swing.JTable();

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Actualizaci√≥n de notas");

        jButton_guardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/transversal_accesoDeDatos/recursos/guardar-el-archivo.png"))); // NOI18N
        jButton_guardar.setText("Guardar");
        jButton_guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_guardarActionPerformed(evt);
            }
        });

        jButton_salir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/transversal_accesoDeDatos/recursos/salir.png"))); // NOI18N
        jButton_salir.setText("Salir");
        jButton_salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_salirActionPerformed(evt);
            }
        });

        jLabel_NotaTItulo.setFont(new java.awt.Font("Lucida Sans", 1, 14)); // NOI18N
        jLabel_NotaTItulo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/transversal_accesoDeDatos/recursos/nota.png"))); // NOI18N
        jLabel_NotaTItulo.setText(" Actualizacion de notas");

        jcomboBoxAlumno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcomboBoxAlumnoActionPerformed(evt);
            }
        });

        jLabel1_alumno.setText("Seleccione un alumno:");

        jTable1_listadoMateria.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1_listadoMateria);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel_NotaTItulo, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(103, 103, 103))
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 430, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(101, 101, 101)
                .addComponent(jButton_guardar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton_salir)
                .addGap(111, 111, 111))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(24, Short.MAX_VALUE)
                .addComponent(jLabel1_alumno)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jcomboBoxAlumno, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel_NotaTItulo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1_alumno)
                    .addComponent(jcomboBoxAlumno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 68, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton_salir, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton_guardar, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_guardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_guardarActionPerformed
        // TODO add your handling code here:
        Integer filaSeleccionada = jTable1_listadoMateria.getSelectedRow();
        if (filaSeleccionada!=-1 ) {
            Alumno al = (Alumno) jcomboBoxAlumno.getSelectedItem();
            //col 0= nota, col 1=nombreMateria , col 2= nota
            //extraccion de dato de la col 0
            Integer idMateria = (Integer) modeloTabla.getValueAt(filaSeleccionada, 0);
            Double nota = Double.parseDouble( (String)  modeloTabla.getValueAt(filaSeleccionada, 2) );
            inscripData.actualizarNota(al.getIdAlumno(), idMateria, nota);
            borrarFilas();
        }else {
            JOptionPane.showConfirmDialog(this, "No hay fila seleccionada, por favor seleccione un alumno a editar");
        }
    }//GEN-LAST:event_jButton_guardarActionPerformed

    private void jButton_salirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_salirActionPerformed
        // TODO add your handling code here:
        //se llama al metodo simplemente
        dispose();
    }//GEN-LAST:event_jButton_salirActionPerformed

    private void jcomboBoxAlumnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcomboBoxAlumnoActionPerformed
        // TODO add your handling code here:
        borrarFilas();
        //se "rescata" el alumno seleccionado en el jcomboBox. El combo box devuelve como un objeto asi que es necesario castear 

        Alumno alumnoElegido = (Alumno) jcomboBoxAlumno.getSelectedItem();

        listaInscripcion = inscripData.obtenerInscripcionesPorAlumno(alumnoElegido.getIdAlumno());
        if (!listaInscripcion.isEmpty()) {
            for (Inscripcion aux : listaInscripcion) {
                //necesario hacer un arreglo para mostrar en tabla los datos en caso que la lista de alumno inscriptos no sea nula
                modeloTabla.addRow(new Object[]{
                    aux.getMateria().getIdMateria(),
                    aux.getMateria().getNombre(),
                    aux.getNota()
                });
            }
        }
    }//GEN-LAST:event_jcomboBoxAlumnoActionPerformed

        private void armarCabeceraTabla() {
//        ArrayList<Object> filaCabecera = new ArrayList<>();
//        filaCabecera.add("C√≥digo de materia");
//        filaCabecera.add("Nombre de alumno");
//        filaCabecera.add("Nota");
//        for (Object item : filaCabecera) {
//            modeloTabla.addColumn(item);
//        }
//        jTable1_listadoMateria.setModel(modeloTabla);

            modeloTabla.addColumn("Codigo");
            modeloTabla.addColumn("Nombre");
            modeloTabla.addColumn("Nota");
            jTable1_listadoMateria.setModel(modeloTabla);
    }
    
    
    private void borrarFilas () {
        int indiceFila = modeloTabla.getRowCount()-1;
        for(int i=indiceFila; i>0;  i--) {
            modeloTabla.removeRow(i);
        }
    }
    
     private void cargarAlumnos () {
         for ( Alumno aux : listaAlumno) {
             jcomboBoxAlumno.addItem(aux);
         }
     }
    
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_guardar;
    private javax.swing.JButton jButton_salir;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1_alumno;
    private javax.swing.JLabel jLabel_NotaTItulo;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTable1_listadoMateria;
    private javax.swing.JComboBox<Alumno> jcomboBoxAlumno;
    // End of variables declaration//GEN-END:variables
}
